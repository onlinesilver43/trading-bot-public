name: Deploy to Droplet
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Package repo (git archive)
        run: git archive --format=tar.gz -o package.tgz HEAD

      - name: Upload package
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.TB_HOST }}
          username: ${{ secrets.TB_USER }}
          password: ${{ secrets.TB_PASS }}
          source: "package.tgz"
          target: "/srv/trading-bots-repo"

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TB_HOST }}
          username: ${{ secrets.TB_USER }}
          password: ${{ secrets.TB_PASS }}
          script: |
            set -e
            mkdir -p /srv/trading-bots /srv/trading-bots-repo
            cd /srv/trading-bots-repo
            tar -xzf package.tgz && rm -f package.tgz

            # write .env with GH secrets (not stored in repo)
            cat >/srv/trading-bots/.env <<EOF
BINANCE_API_KEY=${{ secrets.BINANCE_API_KEY }}
BINANCE_API_SECRET=${{ secrets.BINANCE_API_SECRET }}
EOF

            # sync to live dir (keep data/logs)
            rsync -a --delete --exclude data --exclude logs /srv/trading-bots-repo/ /srv/trading-bots/

            # rebuild & restart
            docker compose -f /srv/trading-bots/compose/docker-compose.yml up -d --build
